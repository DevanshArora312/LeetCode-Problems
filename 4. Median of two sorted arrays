class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        int m = nums1.size() , n = nums2.size();
        int arr[m+n];
        int index=0,j=0;
        for (int i = 0;index<m+n;index++){
            if (j == n){
                arr[index] = nums1[i];
                i++;
            }
            else if ( i == m){
                arr[index] = nums2[j];
                j++;
            }
            else{
                if (nums1[i] > nums2[j]){
                    arr[index] = nums2[j];
                    j++;
                }
                else if (nums1[i] == nums2[j]){
                    arr[index] = nums2[j];
                    index++;
                    arr[index] = nums1[i];
                    j++;
                    i++;
                }
                else{
                    arr[index] = nums1[i];
                    i++;
                }
            }
        }
        if ((m+n)%2 == 0){
            index = (m+n)/2;
            // cout<<"index:"<<index;
            return (float)(arr[index] + arr[index-1])/2;
        }
        else{
            return arr[(m+n-1)/2] ;
        }
    return {};
    }
};
